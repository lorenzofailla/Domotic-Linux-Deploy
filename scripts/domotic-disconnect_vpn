#!/bin/sh

SERVICE_NAME_SHORT="domotic-disconnect_vpn"
SERVICE_NAME="$SERVICE_NAME_SHORT\nOpenVPN background disconnection script for Domotic Linux Server.\nBy Lorenzo Failla."

echo $SERVICE_NAME

# controlla il numero di parametri passati in argomento, se il numero è errato stampa un messaggio di errore ed esce
if [ $# != 0 ]; then

	echo
	echo "Usage: $SERVICE_NAME_SHORT"
	echo "Wrong number of parameters passed. Expected: 0, Actual: $#."
	echo
	exit 1

fi

# il numero di parametri è corretto
PID_FILE_NAME="/tmp/domotic-connect_vpn.pid"

# non se esiste il file di pid, stampa un messaggio di errore ed esce
if [ ! -f $PID_FILE_NAME ]; then

	echo
	echo "No PID found."
	exit 2

fi

# effettua il kill del processo il cui ID era stato scritto nel file
kill $(cat "$PID_FILE_NAME")

# rimuove il file di pid
rm $PID_FILE_NAME

# Controlla che venga realizzata la connessione entro il timeout specificato

TIMEOUT=15
TIME=0

while [ $TIME -lt $TIMEOUT ]
do
	
	VPN_IP=$(show-vpn-ip)
		
	if [ $VPN_IP = "<not-connected>" ]; then
		
		# disconnessione VPN avvenuta
		echo "VPN is disconnected!"

		# invia un comando tcp al server domotic per chiedere l'aggiornamento dei parametri nel database
		domotic-sendtcpmsg __update_status vpn
		
		# esce
		exit 0

	fi

	sleep 1
	TIME=$(($TIME+1))

done

# da gestire: invia un comando tcp al server domotic per chiedere l'inserimento di un messaggio di log
